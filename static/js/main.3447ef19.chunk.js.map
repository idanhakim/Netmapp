{"version":3,"sources":["Components/Header/styles.module.scss","Components/Footer/styles.module.scss","Components/Map/styles.module.scss","Pages/Home/styles.module.scss","Components/Header/index.jsx","Components/Footer/index.jsx","Components/Map/index.jsx","Pages/Home/index.jsx","Pages/AboutUs/index.jsx","Pages/ContactUs/index.jsx","Pages/routes.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","rootHeader","logoBox","navBox","Footer","rootFooter","Map","props","state","center","zoom","olmap","OlMap","target","layers","OlLayerTile","source","OlSourceOSM","view","OlView","this","getView","setCenter","setZoom","navigator","geolocation","getCurrentPosition","position","alert","newCoord","proj","transform","coords","longitude","latitude","setState","setTarget","on","getCenter","getZoom","nextProps","nextState","updateMap","id","rootMap","onClick","e","userAction","Component","Home","rootHome","AboutUs","ContactUs","preUrl","routes","path","component","exact","label","LinksNav","lengthIdx","length","reduce","acc","i","key","to","RoutesApp","route","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,WAAa,2BAA2B,QAAU,wBAAwB,OAAS,yB,mBCArGD,EAAOC,QAAU,CAAC,WAAa,6B,mBCA/BD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,2B,2MCcdC,EAXA,WACX,OACI,4BAAQC,UAAWC,IAAOC,YACtB,yBAAKF,UAAWC,IAAOE,SAAvB,WACA,yBAAKH,UAAWC,IAAOG,QACnB,kBAAC,EAAD,S,iBCEDC,EARA,WACX,OACI,4BAAQL,UAAWC,IAAOK,YAA1B,W,iGCmFOC,E,YA9EX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,OAAQ,CAAC,MAAQ,QACjBC,KAAM,GAKV,EAAKC,MAAQ,IAAIC,IAAM,CACnBC,OAAQ,KACRC,OAAQ,CACJ,IAAIC,IAAY,CACZC,OAAQ,IAAIC,OAGpBC,KAAM,IAAIC,IAAO,CACbV,OAAQ,EAAKD,MAAMC,OACnBC,KAAM,EAAKF,MAAME,SAnBV,E,yEAyBfU,KAAKT,MAAMU,UAAUC,UAAUF,KAAKZ,MAAMC,QAC1CW,KAAKT,MAAMU,UAAUE,QAAQH,KAAKZ,MAAME,Q,0CAGvB,IAAD,OAEZc,UAAUC,aACVD,UAAUC,YAAYC,mBAAmB,SAACC,GACtCC,MAAM,sDACN,IAAIC,EAAWC,IAAKC,UAAU,CAACJ,EAASK,OAAOC,UAAUN,EAASK,OAAOE,UAAW,YAAa,aACjG,EAAKC,SAAS,CACN1B,OAAQoB,EACRnB,KAAM,OAKtBU,KAAKT,MAAMyB,UAAU,OAGrBhB,KAAKT,MAAM0B,GAAG,UAAW,WACrB,IAAI5B,EAAS,EAAKE,MAAMU,UAAUiB,YAC9B5B,EAAO,EAAKC,MAAMU,UAAUkB,UAChC,EAAKJ,SAAS,CAAC1B,SAAQC,a,4CAST8B,EAAWC,GAC7B,IAAIhC,EAASW,KAAKT,MAAMU,UAAUiB,YAC9B5B,EAAOU,KAAKT,MAAMU,UAAUkB,UAChC,OAAI9B,IAAWgC,EAAUhC,QAAUC,IAAS+B,EAAU/B,O,mCAKtDU,KAAKe,SAAS,CAAC1B,OAAQ,CAAC,MAAQ,QAAUC,KAAM,O,+BAG1C,IAAD,OAEL,OADAU,KAAKsB,YAED,yBAAKC,GAAG,MAAM5C,UAAWC,IAAO4C,SAC5B,4BAAQC,QAAS,SAAAC,GAAC,OAAI,EAAKC,eAA3B,oB,GAzEEC,a,iBCGHC,EARF,WACT,OACI,yBAAKlD,UAAWC,IAAOkD,UACnB,kBAAC,EAAD,QCEGC,EANC,WACZ,OACI,yCCIOC,EANG,WACd,OACI,2CCIFC,EAAM,UAAqD,aAE3DC,EAAS,CACX,CACIC,KAAMF,EACNG,UAAW1D,EACX2D,OAAO,EACPC,MAAO,IAEX,CACIH,KAAMF,EACNG,UAAWP,EACXQ,OAAO,EACPC,MAAO,QAEX,CACIH,KAAK,GAAD,OAAKF,EAAL,aACJG,UAAWL,EACXM,OAAO,EACPC,MAAO,YAEX,CACIH,KAAK,GAAD,OAAKF,EAAL,eACJG,UAAWJ,EACXK,OAAO,EACPC,MAAO,cAEX,CACIH,KAAMF,EACNG,UAAWpD,EACXqD,OAAO,EACPC,MAAO,KAIFC,EAAW,WACpB,IAAMC,EAAYN,EAAOO,OAAS,EAClC,OACI,kBAAC,WAAD,KACKP,EAAOQ,OAAO,SAACC,EAAD,EAAqBC,GAAO,IAArBT,EAAoB,EAApBA,KAAMG,EAAc,EAAdA,MACxB,OAAU,IAANM,GAAWA,IAAMJ,EAAkBG,EACjC,GAAN,mBAAWA,GAAX,CAAgB,kBAAC,IAAD,CAAME,IAAKD,EAAGE,GAAIX,GAAOG,MAC1C,MAKFS,EAAY,WACrB,IAAMP,EAAYN,EAAOO,OAAS,EAClC,OACI,kBAAC,WAAD,KACI,kBAAC,IAAUP,EAAO,IAClB,8BACKA,EAAOQ,OAAO,SAACC,EAAKK,EAAOJ,GACxB,OAAU,IAANA,GAAWA,IAAMJ,EAAkBG,EACjC,GAAN,mBAAWA,GAAX,CAAgB,kBAAC,IAAD,eAAOE,IAAKD,GAAOI,OACpC,KAEP,kBAAC,IAAUd,EAAOM,MCrDfS,G,MATH,WAER,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,SCGQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBtD,WACrBA,UAAUuD,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3447ef19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootHeader\":\"styles_rootHeader__1c5os\",\"logoBox\":\"styles_logoBox__2abzq\",\"navBox\":\"styles_navBox__1PQjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootFooter\":\"styles_rootFooter__1tPLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootMap\":\"styles_rootMap__1qAPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootHome\":\"styles_rootHome__3MfIy\"};","import React from 'react';\nimport styles from './styles.module.scss';\nimport {LinksNav} from '../../Pages/routes';\n\nconst Header = () => {\n    return (\n        <header className={styles.rootHeader}>\n            <div className={styles.logoBox}>Netmapp</div>\n            <nav className={styles.navBox}>\n                <LinksNav/>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst Footer = () => {\n    return (\n        <footer className={styles.rootFooter}>\n            footer\n        </footer>\n    );\n};\n\nexport default Footer;","import React, {Component} from \"react\";\nimport styles from \"./styles.module.scss\";\nimport OlMap from \"ol/map\";\nimport OlView from \"ol/view\";\nimport OlLayerTile from \"ol/layer/tile\";\nimport OlSourceOSM from \"ol/source/osm\";\nimport proj from \"ol/proj\";\n\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            center: [546000, 6868000],\n            zoom: 8\n        };\n\n\n\n        this.olmap = new OlMap({\n            target: null,\n            layers: [\n                new OlLayerTile({\n                    source: new OlSourceOSM()\n                })\n            ],\n            view: new OlView({\n                center: this.state.center,\n                zoom: this.state.zoom\n            })\n        });\n    }\n\n    updateMap() {\n        this.olmap.getView().setCenter(this.state.center);\n        this.olmap.getView().setZoom(this.state.zoom);\n    }\n\n    componentDidMount() {\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                alert('---- Success to find your current location!!! ----')\n                var newCoord = proj.transform([position.coords.longitude,position.coords.latitude], 'EPSG:4326', 'EPSG:3857');\n                this.setState({\n                        center: newCoord,\n                        zoom: 14\n                    }\n                );\n            });\n        }\n        this.olmap.setTarget(\"map\");\n\n        // Listen to map changes\n        this.olmap.on(\"moveend\", () => {\n            let center = this.olmap.getView().getCenter();\n            let zoom = this.olmap.getView().getZoom();\n            this.setState({center, zoom});\n        });\n\n        // this.olmap.on('click', function(e) {\n        //     // alert(\"Lat, Lon : \" + e.latlng.lat + \", \" + e.latlng.lng)\n        //     console.log(e)\n        // });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        let center = this.olmap.getView().getCenter();\n        let zoom = this.olmap.getView().getZoom();\n        if (center === nextState.center && zoom === nextState.zoom) return false;\n        return true;\n    }\n\n    userAction() {\n        this.setState({center: [546000, 6868000], zoom: 10});\n    }\n\n    render() {\n        this.updateMap(); // Update map on render?\n        return (\n            <div id=\"map\" className={styles.rootMap}>\n                <button onClick={e => this.userAction()}>Go To Point</button>\n            </div>\n        );\n    }\n}\n\nexport default Map;\n","import React from 'react';\nimport Map from \"../../Components/Map\";\nimport styles from './styles.module.scss';\n\nconst Home = () => {\n    return (\n        <div className={styles.rootHome}>\n            <Map/>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n// import styles from './styles.module.scss';\n\nconst AboutUs = () => {\n    return (\n        <div>AboutUs</div>\n    );\n};\n\nexport default AboutUs;\n","import React from 'react';\n// import styles from './styles.module.scss';\n\nconst ContactUs = () => {\n    return (\n        <div>ContactUs</div>\n    );\n};\n\nexport default ContactUs;\n","import React, {Fragment} from \"react\";\nimport {Route, Link} from \"react-router-dom\";\n\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport Home from \"./Home\";\nimport AboutUs from \"./AboutUs\";\nimport ContactUs from \"./ContactUs\";\n\nconst preUrl = `${process.env.NODE_ENV === 'development' ? '/' : '/Netmapp/'}`;\n\nconst routes = [\n    {\n        path: preUrl,\n        component: Header,\n        exact: false,\n        label: ''\n    },\n    {\n        path: preUrl,\n        component: Home,\n        exact: true,\n        label: 'Home'\n    },\n    {\n        path: `${preUrl}about-us/`,\n        component: AboutUs,\n        exact: true,\n        label: 'About-Us'\n    },\n    {\n        path: `${preUrl}contact-us/`,\n        component: ContactUs,\n        exact: true,\n        label: 'Contact-Us'\n    },\n    {\n        path: preUrl,\n        component: Footer,\n        exact: false,\n        label: ''\n    }\n];\n\nexport const LinksNav = () => {\n    const lengthIdx = routes.length - 1;\n    return (\n        <Fragment>\n            {routes.reduce((acc, {path, label}, i) => {\n                if (i === 0 || i === lengthIdx) return acc;\n                return [...acc, <Link key={i} to={path}>{label}</Link>]\n            }, [])}\n        </Fragment>\n    );\n};\n\nexport const RoutesApp = () => {\n    const lengthIdx = routes.length - 1;\n    return (\n        <Fragment>\n            <Route {...routes[0]} />\n            <main>\n                {routes.reduce((acc, route, i) => {\n                    if (i === 0 || i === lengthIdx) return acc;\n                    return [...acc, <Route key={i} {...route} />]\n                }, [])}\n            </main>\n            <Route {...routes[lengthIdx]} />\n        </Fragment>\n    );\n};\n","import React from 'react';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {RoutesApp} from '../Pages/routes'\nimport '../Styles/reset.scss';\n\nconst App = () => {\n\n    return (\n        <Router>\n            <RoutesApp />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}